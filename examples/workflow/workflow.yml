# NOTE: Inside of a Suite (config.tasks.Suite), there are two new global
# variables defined:
#    suite - the SuiteView of the !Cycle (my_fancy_workflow) 
#    sched - the scheduler.  In this case, crow.metascheduler.MoabTorque.Scheduler

my_fancy_workflow: !Cycle
   Rocoto:
     scheduler:
       name: MoabTorque
       physical_cores_per_node: 24
       logical_cpus_per_core: 2
       hyperthreading_allowed: true
       indent_text: "  "

     accounting:
       account: fv3-cpu
       queue: batch

       # NOTE: Partition should not be specified on Theia.
       # This is just to test "partition" generation:
       partition: delete-me

     serial_accounting:
       account: fv3-cpu
       queue: service

     indent_text: "  "
     workflow_install: /tmp
     workflow_xml: !expand |
        <?xml version="1.0"?>
        <!DOCTYPE workflow [
          <!ENTITY WORKFLOW_INSTALL "{workflow_install}">
        ]>

        <workflow realtime="F"
           scheduler="{sched.rocoto_name}">
            <log verbosity=10><cyclestr>&WORKFLOW_INSTALL;/logs/@Y@m@d@H.log</cyclestr></log>

        {to_rocoto.make_time_xml(indent=2)}
        {to_rocoto.make_task_xml(indent=2)}
        </workflow>

     mpi_task_template: &my_task_template !expand |
       <command>/bin/true</command>
       {sched.rocoto_accounting(suite.Rocoto.accounting)}
       {sched.rocoto_resources(Perform.resources)}

     mpi_enkf_template: &my_enkf_template !expand |
       <command>echo member {imem}</command>
       {sched.rocoto_accounting(suite.Rocoto.enkf_accounting)}
       {sched.rocoto_resources(Perform.resources)}

   Clock:
     start: 2017-02-14t18:00:00
     end: 2017-02-19t12:00:00
     step: !timedelta 06:00

   gdas: !Family
     prep: !Task
       Complete: !Depend ~ suite.has_cycle('-6:00')
       Perform: *gfsprep
       Rocoto: *my_task_template
     # Note: TaskArray does not exist yet, so do not use it.
     # enkf: !TaskArray
     #   Index: imem
     #   Values: !calc tools.seq(1,80) ]
     #   Name: !expand mem{imem:03d}
     #   emem: !Task
     #     Perform: *gdasenkf
     #     Rocoto: *my_enkf_template
     #     Trigger: !anal
     anal: !Task
       Perform: *gfsanl
       Trigger: !Depend  suite.has_cycle('-6:00') | ~ prep.at('-6:00')
       Rocoto: *my_task_template
     fcst: !Task
       Perform: *gfsfcst
       Trigger: !Depend anal
       Time: !timedelta 3:15
       Rocoto: *my_task_template
     post: !Task
       Perform: *gfspost
       Trigger: !Depend fcst.is_running()
       Rocoto: *my_task_template

   gfs: !Family
     Trigger: !Depend gdas
     prep: !Task
       Perform: *gfsprep
       Rocoto: *my_task_template
     anal: !Task
       Perform: *gfsanl
       Trigger: !Depend  suite.has_cycle('-6:00') | ~ prep.at('-6:00')
       Rocoto: *my_task_template
     fcst: !Task
       Perform: *gfsfcst
       Trigger: !Depend anal
       Time: !timedelta 3:15
       Rocoto: *my_task_template
     post: !Task
       Perform: *gfspost
       Trigger: !Depend fcst.is_running()
       Rocoto: *my_task_template
   final: !Task
     Rocoto: !expand |
       <command>/bin/true</command>
       {sched.rocoto_accounting(suite.Rocoto.serial_accounting)}
       {sched.rocoto_resources( [{}] )}

test: &test
  four: !calc 2*2
  B: !FirstTrue
    - { do: A, when: false }
    - { do: B, when: true }
    - { do: C, when: true }
  C: !LastTrue
    - { do: A, when: false }
    - { do: B, when: true }
    - { do: C, when: true }
  none: !LastTrue
    - { do: X, when: false }
    - { do: Y, when: false }
    - { do: Z, when: false }

  dt: !timedelta 03:20
  anltime: 2017-09-19t18:00:00
  fcsttime: !calc anltime+dt
  fYMDH: !calc tools.YMDH(fcsttime)

  # Conditionals on an empty list always return null:
  badlt: !LastTrue []
  badft: !FirstTrue []
  badxv: !FirstMax []
  badnv: !FirstMin []

  expandme: !Eval
    result: !calc "', '.join(lst)"
    lst:
      - abc
      - def
      - ghi

theia: &theia !Platform
  <<: *test
  queue: batch
  machine: THEIA
  ACCOUNT: fv3-cpu
  QUEUE: batch
  QUEUE_ARCH: service
  HPSS_PROJECT: emc-global
  BASE_SVN: /scratch4/NCEPDEV/global/save/glopara/svn
  BASE_GFS: /scratch4/NCEPDEV/global/save/glopara/svn/gfs/branches/gfs_q3fy17/global_shared.v14.1.0
  detect: !calc tools.isdir('/scratch4') and tools.isdir('/scratch3')
  scrub: !FirstMax
    - do: /scratch3/NCEPDEV/stmp1
      when: !calc tools.panasas_gb(do)
    - do: /scratch3/NCEPDEV/stmp2
      when: !calc tools.panasas_gb(do)
    - do: /scratch4/NCEPDEV/stmp3
      when: !calc tools.panasas_gb(do)
    - do: /scratch4/NCEPDEV/stmp4
      when: !calc tools.panasas_gb(do)

wcoss_cray: &wcoss_cray !Platform
  <<: *test
  queue: dev
  machine: THEIA
  ACCOUNT: fv3-cpu
  QUEUE: batch
  QUEUE_ARCH: service
  HPSS_PROJECT: emc-global
  BASE_SVN: /scratch4/NCEPDEV/global/save/glopara/svn
  BASE_GFS: /scratch4/NCEPDEV/global/save/glopara/svn/gfs/branches/gfs_q3fy17/global_shared.v14.1.0
  scrub: !FirstMax
    - do: /gpfs/hps2/ptmp
      when: !calc tools.gpfs_gb(do,'hps2-ptmp','hps2')
    - do: /gpfs/hps3/ptmp
      when: !calc tools.gpfs_gb(do,'hps3-ptmp','hps3')
  detect: !calc tools.isdir('/gpfs/hps') and tools.isfile('/etc/SuSE-release')

platform: !FirstTrue
  - do: *wcoss_cray
    when: !calc do.detect
  - do: *theia
    when: !calc do.detect

more_vars: &more_vars !Template
  b:
    type: int
    description: 'Sample integer b'
  dog:
    type: string
    default: 'brown'

fcst_vars: &fcst_vars !Template
  do_vort_damp:
    type: bool
  a:
    type: int
    allowed: [ 10, 20, 30 ]
    description: "Sample integer a"
# if_present is not useful.  We need to condition on the value.
    if_present: !FirstTrue
      - do: *more_vars
        when: !calc a==10
  cow:
    type: string
    allowed: [ brown, black, white, red, blue ]
    description: "Color of a cow"
    default: blue
  lencow:
    type: int
    description: "Length of the cow"
    default: !calc len(cow)

fcst: &fcst !Action
  Template: *fcst_vars
  do_vort_damp: true
  consv_te: 0.
  fv_sg_adj: 900
  dspheat: false
  shal_cnv: true
  agrid_vel_rst: true
  master_grid: "0p5deg"
  TYPE: hydro
  MONO: mono
  hydro_mono: !expand '{TYPE}_{MONO}'
  some_namelist: !expand |
    &some_namelist
      type = {TYPE}
      mono = {MONO}
      shal_cnv = .{shal_cnv}.
      agrid_vel_rst: .{agrid_vel_rst}.
    /
  a: !calc 5 + 5
  b: !calc a*2
  c: !calc fv_sg_adj+b
  d: !FirstMax
    - when: a
      do: !calc 10*a
    - when: b
      do: !calc 10*b
    - when: c
      do: !calc 10*c
  resources: 
    - mpi_ranks: 192
      threads: 4

gfsprep: &gfsprep !Action
  Template: *fcst_vars
  anothervar: anothervalue
  resources: 
    - mpi_ranks: 2
      OMP_NUM_THREADS: 4

gfsanl: &gfsanl !Action
  Template: *fcst_vars
  anothervar: anothervalue
  resources: 
    - mpi_ranks: 64
      OMP_NUM_THREADS: 4

gfspost: &gfspost !Action
  Template: *fcst_vars
  somevar: somevalue
  resources: 
    - mpi_ranks: 12
      OMP_NUM_THREADS: 1
    
gfsfcst: &gfsfcst !Action
    <<: *fcst
    stuff: [ !calc a+b , !calc 2*2 ]
    DIAG_TABLE: !calc doc.platform.BASE_GFS + "/parm/parm_fv3diag/diag_table"
    resources: 
      - mpi_ranks: 192
        OMP_NUM_THREADS: 4
 
my_fancy_workflow: !Cycle
   Rocoto:
     scheduler:
       name: MoabTorque
       physical_cores_per_node: 24
       logical_cpus_per_core: 2
       hyperthreading_allowed: true

     accounting:
       queue: batch
       account: fv3-cpu

     indent_text: "  "
     workflow_install: /tmp
     workflow_xml: !expand |
        <?xml version="1.0"?>
        <!DOCTYPE workflow [
          <!ENTITY WORKFLOW_INSTALL "{workflow_install}">
        ]>

        <workflow realtime="F"
           scheduler="{sched.rocoto_name}">
            <log verbosity=10><cyclestr>&WORKFLOW_INSTALL;/logs/@Y@m@d@H.log</cyclestr></log>

        {to_rocoto.make_time_xml(indent=2)}
        {to_rocoto.make_task_xml(indent=2)}
        </workflow>

     mpi_task_template: &my_task_template !expand |
       <command>/bin/true</command>
       <queue>{doc.platform.queue}</queue>
       {sched.rocoto_accounting(suite.Rocoto.accounting)}
       {sched.rocoto_resources(Perform.resources)}

   Clock:
     start: 2017-02-14t18:00:00
     end: 2017-02-19t12:00:00
     step: !timedelta 06:00
   gdas: !Family
     prep: !Task
       Complete: !Depend ~ suite.has_cycle('-6:00')
       Perform: *gfsprep
       Rocoto: *my_task_template
     anal: !Task
       Perform: *gfsanl
       Trigger: !Depend  suite.has_cycle('-6:00') | ~ prep.at('-6:00')
       Rocoto: *my_task_template
     fcst: !Task
       Perform: *gfsfcst
       Trigger: !Depend anal
       Time: !timedelta 3:15
       Rocoto: *my_task_template
     post: !Task
       Perform: *gfspost
       Trigger: !Depend fcst.is_running()
       Rocoto: *my_task_template
   gfs: !Family
     Trigger: !Depend gdas
     prep: !Task
       Perform: *gfsprep
       Rocoto: *my_task_template
     anal: !Task
       Perform: *gfsanl
       Trigger: !Depend  suite.has_cycle('-6:00') | ~ prep.at('-6:00')
       Rocoto: *my_task_template
     fcst: !Task
       Perform: *gfsfcst
       Trigger: !Depend anal
       Time: !timedelta 3:15
       Rocoto: *my_task_template
     post: !Task
       Perform: *gfspost
       Trigger: !Depend fcst.is_running()
       Rocoto: *my_task_template
   final: !Task
     Rocoto: !expand |
       <command>/bin/true</command>
       <queue>{doc.platform.queue}</queue>
       {sched.rocoto_accounting(suite.Rocoto.accounting)}
       {sched.rocoto_resources( [{}] )}

scheduler: !calc |
  tools.get_scheduler(doc.scheduler_settings.name,
                      doc.scheduler_settings)
suite: !Cycle
  Clock: !Clock
    start: !calc doc.settings.start_date
    end: !calc doc.settings.end_date
    step: !timedelta "6:00:00"

  Alarms:
    first: !Clock
      start: !calc suite.Clock.start
      end: !calc suite.Clock.start
      step: !calc suite.Clock.step
    gdas: !Clock
      start: !calc suite.Clock.start
      end: !calc suite.Clock.end
      step: !calc suite.Clock.step
    gfs: !Clock
      start: !calc doc.settings.start_date_gfs
      end: !calc doc.settings.end_date_gfs
      step: !calc doc.settings.interval_gfs

  ecFlow:
    suite_def_filename: "prod%Y%m%d%H.def"
    suite_name: "prod%Y%m%d%H"
    scheduler: !calc doc.scheduler

    # write_cycles/analyze_cycles: Use these to generate a subset of
    # the cycles in ecFlow.  Make sure analyze_cycles starts at least
    # one cycle before write_cycles so that dependencies are
    # processed.

    # write_cycles: !Clock
    #   start: 2018-01-02T00:00:00
    #   end: 2018-01-02T18:00:00
    #   step: !timedelta "6:00:00"
    # analyze_cycles: !Clock
    #   start: 2018-01-02T00:00:00
    #   end: 2018-01-02T18:00:00
    #   step: !timedelta "6:00:00"

  ecflow_def: !expand |
    # This ecflow suite definition is automatically generated.
    # Changes will be overwritten.  Please edit suite_def.yaml instead.
    #repeat day 1
    edit ECF_TRIES '{doc.settings.max_job_tries}'
    #edit ECF_JOB_CMD 'lsub %ECF_JOB% %ECF_JOBOUT% xc40-dev'
    #edit ECF_JOB_CMD 'lsub %ECF_JOB% %ECF_JOBOUT% %MACHINE%'
    #edit ECF_KILL_CMD 'lkill %ECF_NAME% %ECF_JOBOUT%'
    edit ECF_HOME '{doc.settings.ECF_HOME}'
    edit MACHINE 'xc40-dev'
    #edit ECF_HOME '/gpfs/hps3/emc/global/noscrub/emc.glopara/ecflow/fv3'
    edit CYC '{tools.strftime(suite.Clock.now,"%H")}'
    edit PDY '{tools.strftime(suite.Clock.now,"%Y%m%d")}'
    edit ENVIR 'prod'
    edit E 'jecffv3'
    #edit QUEUE 'dev'
    edit EMCPEN '{doc.settings.experiment_name}'
    edit DATAROOT '{doc.settings.DATAROOT}'
    edit ECF_FILES '{doc.settings.ECF_HOME}'
    #edit ECF_JOBOUT '%ECF_HOME%/%ECF_NAME%.%ECF_TRYNO%'
    edit ECF_OUT '{doc.settings.ECF_HOME}'
    edit ECF_LOG '{doc.settings.ECF_HOME}/ecf.log'
    edit MODEL_NAME 'gfs'

    edit DUMPDIR '{doc.settings.DUMPDIR}'
    {common_metasched_vars}

  common_metasched_vars: !expand |
    {metasched.defvar("QUEUE", doc.settings.QUEUE)}
    {metasched.defvar("HOMEgfs", doc.settings.HOMEgfs)}
    {metasched.defvar("QUEUESHARED", doc.settings.QUEUE)}
    {metasched.defvar("COM", doc.settings.COM)}
    {metasched.defvar("QUEUESERV", doc.settings.QUEUESERV)}
    {metasched.defvar("PROJECT", doc.settings.PROJECT)}

  Rocoto:
    scheduler: !calc doc.scheduler
    max_tries: !calc doc.settings.max_job_tries
    workflow_xml: !expand |
      <?xml version="1.0"?>
      <!DOCTYPE workflow [
        <!ENTITY LOG_DIR "{doc.settings.ROCOTO_HOME}/log">
        <!ENTITY TASK_THROTTLE "12">
        <!ENTITY CYCLE_THROTTLE "2">
        <!ENTITY PSLOT "{doc.settings.experiment_name}">
        <!ENTITY MAX_TRIES "{doc.settings.max_job_tries}">
        <!ENTITY EXPDIR "{doc.settings.EXPDIR}">
      {tools.indent("  ",suite.common_metasched_vars)}
      ]>
      <!-- This Rocoto suite definition is automatically generated.
           Changes will be overwritten.  Please edit suite_def.yaml instead. -->
      <workflow realtime="F"
                cyclethrottle="&CYCLE_THROTTLE;"
                scheduler="{sched.rocoto_name.lower()}"
                taskthrottle="&TASK_THROTTLE;" >
        <log><cyclestr>&LOG_DIR;/rocoto_@Y@m@d@H.log</cyclestr></log>
      {to_rocoto.make_time_xml(indent=1)}
      {to_rocoto.make_task_xml(indent=1)}
      </workflow>

  gdas: !Family
    AlarmName: gdas

    ecflow_def: |
      edit MODEL_NAME 'gdas' 

    dump_waiter: !Task
      <<: *dump_waiter_task
      Complete: !Depend ~ suite.has_cycle('-6:00:00') 

    prep: !Task
      <<: *exclusive_task_template
      Trigger: !Depend  up.gdas.post.at('-6:00:00') & dump_waiter.updated_status
      Complete: !Depend ~ suite.has_cycle('-6:00:00') 
      resources: !calc ( doc.resources.run_prep )

    anal: !Task
      <<: *exclusive_task_template
      Trigger: !Depend  ( prep & enkf.epos.at('-6:00:00') )
      Complete: !Depend ~ suite.has_cycle('-6:00:00')
      resources: !calc ( doc.resources.run_anal )

    fcst: !Task
      <<: *exclusive_task_template
      Trigger: !Depend anal | ~ suite.has_cycle('-6:00:00')
      resources: !calc ( doc.resources.run_gdasfcst )

    post: !TaskArray
      Dimensions:
        fhr: !calc doc.settings.gdas_hours #tools.seq(0,9,1)
      post_manager_el: !TaskElement
        <<: *exclusive_task_template
        Trigger: !Depend ( up.fcst.is_running() | up.fcst.is_completed() )
        Disable: !calc metasched.type=='rocoto'
        Foreach: []
        J_JOB: post_manager
        ecflow_command: *post_manager_job_contents
        Name: post_manager
        release_postanl: !DataEvent
          file: !expand >-
            {metasched.varref("COM")}/{up.CDUMP}.{metasched.datestring("%Y%m%d/%H/")}{up.CDUMP}.t{metasched.datestring("%H")}z.logf000.nemsio
        release_post_fhr: !DataEventElement
          Name: !expand "release_post{dimval.fhr:02d}"
          Foreach: [ fhr ]
          file: !expand >
            {metasched.varref("COM")}/{up.CDUMP}.{metasched.datestring("%Y%m%d/%H/")}{up.CDUMP}.t{metasched.datestring("%H")}z.logf{dimval.fhr:03d}.nemsio
        # NOTE: the above files must match post_manager.yaml

      post_el: !TaskElement
        <<: *exclusive_task_template
        Foreach: [ fhr ]
        J_JOB: post.sh
        Name: !expand "g{dimidx.fhr:03d}"
        fhrgrp: !expand "{dimidx.fhr:03d}"
        fhrlst: !FirstTrue
          - when: !calc dimidx.fhr==0
            do:   anl
          - otherwise: !expand "f{(dimidx.fhr-1)*3:03d}"
        ecflow_def: !calc more_vars
        rocoto_more_vars: !calc more_vars
        more_vars: !expand |
          {metasched.defenvar("FHRGRP",fhrgrp)}
          {metasched.defenvar("FHRLST",fhrlst)}
        release_id: !FirstTrue
          - when: !calc dimidx.fhr==0
            do:   "anl"
          - otherwise: !expand "{(dimidx.fhr-1)*3:02d}"
        Trigger: !Depend post_manager.depend("release_post{F}",F=[release_id])
        resources: !calc doc.resources.run_gdaspost

    vrfy: !Task
      <<: *exclusive_task_template
      Trigger: !Depend post
      resources: !calc ( doc.resources.run_gdasvrfy )

    enkf: !Family
      eobs: !Task
        <<: *exclusive_task_template
        Trigger: !Depend  ( up.prep & epos.at('-6:00:00') )
        Complete: !Depend ~ suite.has_cycle('-6:00:00')
        resources: !calc ( doc.resources.run_eobs )

      eomg: !TaskArray
        Trigger: !Depend eobs
        Complete: !Depend ~ suite.has_cycle('-6:00:00')
        Dimensions:
          groupid: !calc tools.seq(1,doc.settings.ENKF_INNOVATE_GROUPS,1)
        grp: !TaskElement
          <<: *exclusive_task_template
          resources: !calc ( doc.resources.run_eomg )
          J_JOB: eomg.sh
          Foreach: [ groupid ]
          Name: !expand "grp{dimval.groupid}"
          ecflow_def: !calc more_vars
          rocoto_more_vars: !calc more_vars
          ENSGRP: !expand "{dimval.groupid:02d}"
          more_vars: !expand |
            {metasched.defenvar("ENSGRP",ENSGRP)}

      eupd: !Task
        <<: *exclusive_task_template
        Trigger: !Depend eomg
        Complete: !Depend ~ suite.has_cycle('-6:00:00')
        resources: !calc ( doc.resources.run_eupd )

      ecen: !Task
        <<: *exclusive_task_template
        Trigger: !Depend ( eupd & up.anal )
        Complete: !Depend ~ suite.has_cycle('-6:00:00')
        resources: !calc ( doc.resources.run_ecen )

      efcs: !TaskArray
        Trigger: !Depend ( ecen | ~ suite.has_cycle('-6:00:00') )
        Dimensions:
          groupid: !calc tools.seq(1,doc.settings.ENKF_FORECAST_GROUPS,1)
        grp: !TaskElement
          <<: *exclusive_task_template
          resources: !calc ( doc.resources.run_efcs )
          J_JOB: efcs.sh
          Foreach: [ groupid ]
          Name: !expand "grp{dimval.groupid}"
          ecflow_def: !calc more_vars
          rocoto_more_vars: !calc more_vars
          ENSGRP: !expand "{dimval.groupid:02d}"
          more_vars: !expand |
            {metasched.defenvar("ENSGRP",ENSGRP)}

      epos: !Task
        <<: *exclusive_task_template
        Trigger: !Depend efcs
        resources: !calc ( doc.resources.run_epos )

  gfs: !Family
    Complete: !Depend ~ suite.has_cycle('-6:00:00')
    AlarmName: gfs
    ecflow_def: |
      edit MODEL_NAME 'gfs'

    dump_waiter: *dump_waiter_task

    prep: !Task
      <<: *exclusive_task_template
      resources: !calc ( doc.resources.run_prep )
      Trigger: !Depend  up.gdas.post.at('-6:00:00') & dump_waiter.updated_status
    
    anal: !Task
      <<: *exclusive_task_template
      Trigger: !Depend  ( prep & up.gdas.enkf.epos.at('-6:00:00') )
      resources: !calc ( doc.resources.run_anal )

    fcst: !Task
      <<: *exclusive_task_template
      Trigger: !Depend anal
      resources: !calc ( doc.resources.run_gfsfcst )

    post: !TaskArray
      Dimensions:
        fhr: !calc doc.settings.forecast_hours

      post_manager_el: !TaskElement
        <<: *exclusive_task_template
        Disable: !calc metasched.type == 'rocoto'
        Trigger: !Depend ( up.fcst.is_running() | up.fcst.is_completed() )
        Foreach: [ ]
        ecflow_command: *post_manager_job_contents
        J_JOB: post_manager
        Name: post_manager
        release_postanl: !DataEvent
          file: !expand >-
            {metasched.varref("COM")}/{up.CDUMP}.{metasched.datestring("%Y%m%d/%H/")}{up.CDUMP}.t{metasched.datestring("%H")}z.logf000.nemsio
        release_post_fhr: !DataEventElement
          Name: !expand "release_post{dimval.fhr:02d}"
          Foreach: [ fhr ]
          file: !expand >-
            {metasched.varref("COM")}/{up.CDUMP}.{metasched.datestring("%Y%m%d/%H/")}{up.CDUMP}.t{metasched.datestring("%H")}z.logf{dimval.fhr:03d}.nemsio
        # NOTE: the above files must match post_manager.yaml

      post_el: !TaskElement
        <<: *exclusive_task_template
        Foreach: [ fhr  ]
        resources: !calc doc.resources.run_gfspost
        Name: !expand "grp{dimidx.fhr:03d}"
        fhrgrp: !expand "{dimidx.fhr:03d}"
        J_JOB: post.sh
        fhrlst: !FirstTrue
          - when: !calc dimidx.fhr==0
            do:   anl
          - otherwise: !expand "f{(dimidx.fhr-1)*6:03d}"
        release_id: !FirstTrue
          - when: !calc dimidx.fhr==0
            do:   "00"
          - otherwise: !expand "{(dimidx.fhr-1)*6:02d}"
        ecflow_def: !calc more_vars
        rocoto_more_vars: !calc more_vars
        Trigger: !Depend post_manager.depend("release_post{F}",F=[release_id])
        more_vars: !expand |
          {metasched.defenvar("FHRGRP",fhrgrp)}
          {metasched.defenvar("FHRLST",fhrlst)}
    
    vrfy: !Task
      <<: *exclusive_task_template
      Trigger: !Depend post
      resources: !calc ( doc.resources.run_gfsvrfy )

  archive: !Family
    gdasarch: !Task
      <<: *service_task_template
      AlarmName: gdas
      Trigger: !Depend up.gdas.vrfy
      resources: !calc ( doc.resources.run_arch )
      Disable: !calc not doc.settings.archive_to_hpss
      J_JOB: arch.sh

    earc: !TaskArray
      AlarmName: gdas
      Trigger: !Depend up.gdas.enkf.epos
      Dimensions:
        groupid: !calc tools.seq(0,doc.settings.ENKF_ARCHIVE_GROUPS-1,1)
      grp: !TaskElement
        <<: *service_task_template
        resources: !calc ( doc.resources.run_arch )
        J_JOB: earc.sh
        Foreach: [ groupid ]
        Name: !expand "grp{dimval.groupid:02d}"
        ecflow_def: !calc more_vars
        rocoto_more_vars: !calc more_vars
        ENSGRP: !expand "{dimval.groupid:02d}"
        more_vars: !expand |
          {metasched.defenvar("ENSGRP",ENSGRP)}

    gfsarch: !Task
      <<: *service_task_template
      Complete: !Depend ~ suite.has_cycle('-6:00:00')
      AlarmName: gfs
      Trigger: !Depend up.gfs.vrfy
      resources: !calc ( doc.resources.run_arch )
      Disable: !calc not doc.settings.archive_to_hpss
      J_JOB: arch.sh

  final: !Task
    <<: *service_task_template
    resources: !calc (doc.resources.run_nothing)
    rocoto_command: /bin/true


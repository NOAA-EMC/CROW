#!/bin/ksh 
set -x

export RUN_ENVIR="nco"
export machine="WCOSS_C"  

export ACCOUNT="GFS-OPS"
export QUEUE="prod"
export QUEUE_ARCH="dev_transfer"

# Project to use in mass store:
HPSS_PROJECT=emc-global

export gfs_ver=v15.0.0
export HOMEgfs=$NWROOT/gfs.${gfs_ver}
export BASE_MODULES="$HOMEgfs/modulefiles"
export PARMgfs=$HOMEgfs/parm
export FIXgfs=$HOMEgfs/fix
export USHgfs=$HOMEgfs/ush
export EXECgfs=$HOMEgfs/exec


########################################################################
# Theia workaround.  Reduce stack soft limit while running "module" to
# avoid runaway memory allocation:
ulimit_s=$( ulimit -S -s )
ulimit -S -s 10000

# Find module command and purge:
source "$BASE_MODULES/module-setup.sh.inc" 2> /dev/null

# Load our module:
module use "$BASE_MODULES" 2> /dev/null
module load module_base.$( echo $machine | tr A-Z a-z ) 2> /dev/null

# Restore stack soft limit:
ulimit -S -s "$ulimit_s"
unset ulimit_s

for exetest in hsi htar ; do
    if ( ! which $exetest ) ; then
        echo "$exetest: executable missing after \"module load\"" 1>&2
        exit 2
    fi
done

########################################################################
# GLOBAL static environment parameters

export NWPROD="/gpfs/hps/nco/ops/nwprod"
if [ -d /gpfs/tp1 ]; then
    export SITE="LUNA"
    export DMPDIR="/gpfs/tp1/emc/globaldump"
elif [ -d /gpfs/gp1 ]; then
    export SITE="SURGE"
    export DMPDIR="/gpfs/gp1/emc/globaldump"
fi
export RTMFIX=$CRTM_FIX


# Machine specific paths used everywhere

# USER specific paths
export HOMEDIR="/gpfs/hps3/emc/global/noscrub/$USER"
export STMP="/gpfs/hps2/stmp/$USER"
export PTMP="/gpfs/hps2/ptmp/$USER"
export NOSCRUB="/gpfs/hps3/emc/global/noscrub/$USER"

# Base directories for various builds
export BASE_SVN="/gpfs/hps3/emc/global/noscrub/emc.glopara/svn"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Build paths relative to $HOMEgfs
export HOMEgsi="$HOMEgfs/sorc/gsi.fd"
export HOMEfv3gfs="$HOMEgfs/sorc/fv3gfs.fd"
export HOMEpost="$HOMEgfs"
export BASE_PREP="$BASE_SVN/obsproc/releases/obsproc_prep_RB-4.0.0"
export BASE_PREP_GLOBAL="$BASE_SVN/obsproc/releases/obsproc_global_RB-3.0.0"
export BASE_VERIF="$BASE_SVN/verif/global/tags/vsdb"

#--will be removed after gsi reppo is updated
export BASE_GSM=$HOMEgfs
export BASE_GSI=$HOMEgsi


# CONVENIENT utility scripts and other environment parameters
export NCP="/bin/cp -p"
export NMV="/bin/mv"
export NLN="/bin/ln -sf"
export VERBOSE="YES"
export KEEPDATA="NO"
export NCO_NAMING_CONV="YES"
export CHGRP_CMD="chgrp rstprod"
export NEMSIOGET="$HOMEgfs/exec/nemsio_get"

# Machine environment, jobs, and other utility scripts
export BASE_ENV="$HOMEgfs/env"
export BASE_JOB="$HOMEgfs/jobs/rocoto"

# EXPERIMENT specific environment parameters
export SDATE=2018020100
export EDATE=2018020300

export assim_freq=6
export PSLOT="nco_prod"  
export EXPDIR="/gpfs/hps3/ptmp/$USER/$PSLOT"
export ROTDIR="$COMROOT/gfs/prod"
export RUNDIR="$STMP/$PSLOT"
export ARCDIR="$NOSCRUB/archive/$PSLOT"
export ICSDIR="$ICSDIR"
export ATARDIR="/NCEPDEV/$HPSS_PROJECT/1year/$USER/$machine/scratch/$PSLOT"

# Resolution specific parameters
export LEVS=65
export CASE=768          
export CASE_ENKF=384           

# Surface cycle update frequency
export FHCYC=24

# Output frequency of the forecast model (for cycling)
export FHMIN=0
export FHMAX=9
export FHOUT=1

# GFS cycle info
export gfs_cyc=4

# GFS output and frequency
export FHMIN_GFS=0
export FHMAX_GFS=384
export FHOUT_GFS=3
export FHMAX_HF_GFS=120
export FHOUT_HF_GFS=1

# I/O QUILTING, true--use Write Component; false--use GFDL FMS
# if quilting=true, choose OUTPUT_GRID as cubed_sphere_grid in netcdf or gaussian_grid
# if gaussian_grid, set OUTPUT_FILE for nemsio or netcdf
export QUILTING=".true."
export OUTPUT_GRID="gaussian_grid"
export OUTPUT_FILE="nemsio"

# Microphysics Options: 99-ZhaoCarr, 8-Thompson; 6-WSM6, 10-MG, 11-GFDL
export imp_physics=11 

# Shared parameters
# Hybrid related
export DOHYBVAR="YES"
export NMEM_ENKF=80             
export SMOOTH_ENKF="YES"
export l4densvar=".true."
export lwrite4danl=".false."

# EnKF output frequency
if [ $DOHYBVAR = "YES" ]; then
    export FHMIN_ENKF=3
    export FHMAX_ENKF=9
    if [ $l4densvar = ".true." ]; then
        export FHOUT=1
        export FHOUT_ENKF=1
    else
        export FHOUT_ENKF=3
    fi
fi

# Relocation related
export DO_RELOCATE="NO"

# If YES, NSST is turned on in anal and/or fcst steps
export DONST="YES"

# The switch to apply SST elevation correction or not
export nst_anl=.true.


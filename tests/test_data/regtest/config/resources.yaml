# This file is used to tell the underlying scripts how many threads or
# MPI ranks are used for various executed programs.  Many of the
# programs listed here are for the full workflow, such as analysis or
# ENKF jobs.  Hence, only a few of these are used.  Specifically, the
# ones in the post, fcst, and getic sections of the large "if" block.

config_resources:
  filename: "config.resources"
  content: !expand |
    #!/bin/ksh -x
    
    # This file is automatically generated from the YAML-based system
    # in ecf/ecfutils/.  Any changes will be overwritten if
    # setup_case.sh is rerun.
    
    ########## config.resources ##########
    # Set resource information for job tasks
    # e.g. walltime, node, cores per node, memory etc.
    
    if [ $# -ne 1 ]; then
    
        echo "Must specify an input task argument to set resource variables!"
        echo "argument can be any one of the following:"
        echo "anal fcst post vrfy arch"
        echo "eobs eomg eupd ecen efcs epos earc"
        echo "postsnd awips gempak"
        exit 1
    
    fi
    
    step=$1
    
    echo "BEGIN: config.resources"

    if [[ "$step" == "prep" ]] ; then
        export npe_prep={doc.aliases.prep.npe}
        export npe_node_prep={doc.aliases.prep.npe_node}

    elif [[ "$step" == "prepbufr" ]] ; then
        export npe_prepbufr={doc.aliases.prepbufr.npe}
        export npe_node_prepbufr={doc.aliases.prepbufr.npe_node}

    elif [[ "$step" == "anal" ]] ; then
        export npe_anal={doc.aliases.anal.npe}
        export npe_node_anal={doc.aliases.anal.npe_node}
        export nth_anal={doc.aliases.anal.nth}

    elif [[ "$step" == "fcst" ]] ; then
        if [[ "${{CDUMP:-}}" == gdas ]] ; then
            export npe_fcst={doc.aliases.gdasfcst.npe}
            export npe_node_fcst={doc.aliases.gdasfcst.npe_node}
        else
            export npe_fcst_gfs={doc.aliases.gfsfcst.npe}
            export npe_fcst={doc.aliases.gfsfcst.npe}
            export npe_node_fcst={doc.aliases.gfsfcst.npe_node}
        fi

    elif [[ "$step" == "post" ]] ; then
        if [[ "${{CDUMP:-}}" == gdas ]] ; then
            export npe_post={doc.aliases.gdaspost.npe}
            export npe_node_post={doc.aliases.gdaspost.npe_node}
        else
            export npe_post={doc.aliases.gfspost.npe}
            export npe_node_post={doc.aliases.gfspost.npe_node}
        fi

    elif [[ "$step" == "vrfy" ]] ; then
        export npe_vrfy={doc.aliases.gdasvrfy.npe}
        export npe_node_vrfy={doc.aliases.gdasvrfy.npe_node}
        export npe_vrfy_gfs={doc.aliases.gfsvrfy.npe}
        export npe_node_vrfy_gfs={doc.aliases.gfsvrfy.npe_node}

    elif [[ "$step" == "arch" ]] ; then
        export npe_arch={doc.aliases.arch.npe}
        export npe_node_arch={doc.aliases.arch.npe_node}

    elif [[ "$step" == "earc" ]] ; then
        export npe_earc={doc.aliases.earc.npe}
        export npe_node_earc={doc.aliases.earc.npe_node}

    elif [[ "$step" == "getic" ]] ; then
        export npe_getic={doc.aliases.getic.npe}
        export npe_node_getic={doc.aliases.getic.npe_node}

    elif [[ "$step" == "eobs" ]] ; then
        export npe_eobs={doc.aliases.eobs.npe}
        export npe_node_eobs={doc.aliases.eobs.npe_node}
        export nth_eobs={doc.aliases.eobs.nth}
        
    elif [[ "$step" == "eomg" ]] ; then
        export npe_eobs={doc.aliases.eomg.npe}
        export npe_node_eobs={doc.aliases.eomg.npe_node}
        export nth_eobs={doc.aliases.eomg.nth}
        
    elif [[ "$step" == "eupd" ]] ; then
        export npe_eupd={doc.aliases.eupd.npe}
        export npe_node_eupd={doc.aliases.eupd.npe_node}
        export nth_eupd={doc.aliases.eupd.nth}

    elif [[ "$step" == "ecen" ]] ; then
        export npe_ecen={doc.aliases.ecen.npe}
        export npe_node_ecen={doc.aliases.ecen.npe_node}
        export nth_ecen={doc.aliases.ecen.nth}
        export nth_cycle=$nth_ecen
        
    elif [[ "$step" == "efcs" ]] ; then
        export npe_efcs={doc.aliases.efcs.npe}
        export npe_node_efcs={doc.aliases.efcs.npe_node}
        export nth_efcs={doc.aliases.efcs.nth}

    elif [[ "$step" == "epos" ]] ; then
        export npe_epos={doc.aliases.epos.npe}
        export npe_node_epos={doc.aliases.epos.npe_node}
        export nth_epos={doc.aliases.epos.nth}

    elif [[ "$step" == "awips_20km_1p0" ]] ; then
        export npe_awips={doc.aliases.awips_20km_1p0.npe}
        export npe_node_awips={doc.aliases.awips_20km_1p0.npe_node}

    elif [[ "$step" == "awips_g2" ]] ; then
        export npe_awips={doc.aliases.awips_g2.npe}
        export npe_node_awips={doc.aliases.awips_g2.npe_node}

    elif [[ "$step" == "postsnd" ]] ; then
        export npe_postsnd={doc.aliases.postsnd.npe}
        export npe_node_postsnd={doc.aliases.postsnd.npe_node}
        export npe_postsndcfp={doc.aliases.postsndcfp.npe}
        export npe_node_postsndcfp={doc.aliases.postsndcfp.npe_node}

    elif [[ "$step" == "gempak" ]] ; then
        if [[ "$CDUMP" == gdas ]] ; then
            export npe_gempak={doc.aliases.gdas_gempak.npe}
            export npe_node_gempak={doc.aliases.gdas_gempak.npe_node}
        else
            export npe_gempak={doc.aliases.gfs_gempak.npe}
            export npe_node_gempak={doc.aliases.gfs_gempak.npe_node}
        fi

    else
    
        echo "Invalid step = $step, ABORT!"
        exit 2
    
    fi
    
    echo "END: config.resources"

# This file is used to generate config.nsst, which would be used to
# control NSST settings.  Specifically, it controls the nstf_name
# option in the gfs physics namelist (&gfs_physics_nml)

config_nsst:
  filename: config.nsst
  nst_spinup_logic: !FirstTrue
    - when: !calc doc.nsst.get("NST_SPINUP","")
      do: !expand "export NST_SPINUP=$NST_SPINUP"
    - otherwise: |
        export NST_SPINUP=0
        #if [[ "$CDATE" = $SDATE ]]; then
        #    export NST_SPINUP=1
        #fi      
  content: !expand |
    #!/bin/ksh -x
    
    # This file is automatically generated from the YAML-based system
    # in ecf/ecfutils/.  Any changes will be overwritten if
    # setup_case.sh is rerun.
    
    ########## config.nsst ##########
    # NSST specific
    
    echo "BEGIN: config.nsst"
    
    # NSST parameters contained within nstf_name
    
    # nstf_name(1) : NST_MODEL (NSST Model) : 0 = OFF, 1 = ON but uncoupled, 2 = ON and coupled
    export NST_MODEL={doc.nsst.NST_MODEL}
    
    # nstf_name(2) : NST_SPINUP : 0 = OFF, 1 = ON,
    {nst_spinup_logic}

    # nstf_name(3) : NST_RESV (Reserved, NSST Analysis) : 0 = OFF, 1 = ON
    export NST_RESV={doc.nsst.NST_RESV}
    
    # nstf_name(4,5) : ZSEA1, ZSEA2 the two depths to apply vertical average (bias correction)
    export ZSEA1={doc.nsst.ZSEA1}
    export ZSEA2={doc.nsst.ZSEA2}
    
    export NST_GSI={doc.nsst.NST_GSI}          # default 0: No NST info at all;
                              #         1: Input NST info but not used in GSI;
                              #         2: Input NST info, used in CRTM simulation, no Tr analysis
                              #         3: Input NST info, used in both CRTM simulation and Tr analysis
    export NSTINFO={doc.nsst.NSTINFO}          # number of elements added in obs. data array (default = 0)
    if [ $NST_GSI -gt 0 ]; then export NSTINFO=4; fi
    
    echo "END: config.nsst"
    
